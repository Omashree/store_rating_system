{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\omash\\\\Downloads\\\\Omashree\\\\store_rating_system\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect, useState } from 'react';\nimport { AuthProvider, AuthContext } from './AuthContext';\nimport { Container, Alert, Button } from 'react-bootstrap'; // Import Bootstrap components\n\n// Import Page Components (ensure these paths match your actual file names, e.g., Login.js, not LoginPage.js)\nimport LoginPage from './pages/LoginPage'; // Corrected import path based on previous file structure\nimport RegisterPage from './pages/RegisterPage'; // Corrected import path based on previous file structure\nimport AdminDashboard from './pages/AdminDashboard';\nimport UserDashboard from './pages/UserDashboard';\nimport StoreOwnerDashboard from './pages/StoreOwnerDashboard';\n\n/**\n * MainAppContent Component:\n * This component conditionally renders the appropriate dashboard or login/register page\n * based on the authentication status and user role.\n * It consumes the AuthContext.\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MainAppContent() {\n  _s();\n  const {\n    token,\n    role,\n    logout\n  } = useContext(AuthContext);\n  const [isAuthChecking, setIsAuthChecking] = useState(true);\n  const [currentPage, setCurrentPage] = useState(window.location.hash === '#register' ? 'register' : 'login');\n\n  // Effect hook to verify token validity on initial component mount\n  useEffect(() => {\n    const verifyToken = async () => {\n      if (token) {\n        try {\n          const response = await fetch('http://localhost:5000/api/admin/users', {\n            headers: {\n              'Authorization': `Bearer ${token}`\n            }\n          });\n          if (!response.ok) {\n            console.warn(\"Token verification failed, logging out.\");\n            logout();\n          }\n        } catch (error) {\n          // Log the error for debugging purposes, but don't expose sensitive details to the user\n          console.error(\"Error during token verification:\", error);\n          // If there's a network error or any other issue, assume the token is invalid or session is broken\n          logout();\n        }\n      }\n      setIsAuthChecking(false);\n    };\n    verifyToken();\n\n    // Optional: Listen for hash changes from browser navigation (e.g., back/forward buttons)\n    const handleHashChange = () => {\n      setCurrentPage(window.location.hash === '#register' ? 'register' : 'login');\n    };\n    window.addEventListener('hashchange', handleHashChange);\n    return () => {\n      window.removeEventListener('hashchange', handleHashChange);\n    };\n  }, [token, logout]);\n\n  // Display a loading indicator while the authentication status is being verified\n  if (isAuthChecking) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex justify-content-center align-items-center min-vh-100\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"h4 text-muted\",\n        children: \"Checking authentication...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n  let content;\n  // Conditional rendering based on whether a valid token exists\n  if (!token) {\n    // If no token, display the login or registration page based on currentPage state\n    content = /*#__PURE__*/_jsxDEV(Container, {\n      className: \"d-flex flex-column align-items-center justify-content-center min-vh-100 bg-light\",\n      children: currentPage === 'login' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(LoginPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(RegisterPage, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  } else {\n    // If a token exists, render the appropriate dashboard based on the user's role\n    switch (role) {\n      case 'admin':\n        content = /*#__PURE__*/_jsxDEV(AdminDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 19\n        }, this);\n        break;\n      case 'user':\n        content = /*#__PURE__*/_jsxDEV(UserDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }, this);\n        break;\n      case 'store_owner':\n        content = /*#__PURE__*/_jsxDEV(StoreOwnerDashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }, this);\n        break;\n      default:\n        // Fallback for unrecognized roles or other unauthorized scenarios\n        content = /*#__PURE__*/_jsxDEV(Container, {\n          className: \"d-flex justify-content-center align-items-center min-vh-100 flex-column\",\n          children: [/*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            className: \"h4 text-center\",\n            children: \"Access Denied: Your role is not recognized or authorized.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"danger\",\n            onClick: logout,\n            className: \"mt-3\",\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-light font-sans text-dark\",\n    children: [\" \", content]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n}\n\n/**\n * App Component:\n * The root component that wraps the MainAppContent with AuthProvider.\n * This ensures that AuthContext is available throughout the application.\n */\n_s(MainAppContent, \"ttMKngOJCgYSsnBIudzLfXwzgZ4=\");\n_c = MainAppContent;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(AuthProvider, {\n    children: /*#__PURE__*/_jsxDEV(MainAppContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"MainAppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useContext","useEffect","useState","AuthProvider","AuthContext","Container","Alert","Button","LoginPage","RegisterPage","AdminDashboard","UserDashboard","StoreOwnerDashboard","jsxDEV","_jsxDEV","Fragment","_Fragment","MainAppContent","_s","token","role","logout","isAuthChecking","setIsAuthChecking","currentPage","setCurrentPage","window","location","hash","verifyToken","response","fetch","headers","ok","console","warn","error","handleHashChange","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","content","variant","onClick","_c","App","_c2","$RefreshReg$"],"sources":["C:/Users/omash/Downloads/Omashree/store_rating_system/frontend/src/App.js"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { AuthProvider, AuthContext } from './AuthContext';\nimport { Container, Alert, Button } from 'react-bootstrap'; // Import Bootstrap components\n\n// Import Page Components (ensure these paths match your actual file names, e.g., Login.js, not LoginPage.js)\nimport LoginPage from './pages/LoginPage'; // Corrected import path based on previous file structure\nimport RegisterPage from './pages/RegisterPage'; // Corrected import path based on previous file structure\nimport AdminDashboard from './pages/AdminDashboard';\nimport UserDashboard from './pages/UserDashboard';\nimport StoreOwnerDashboard from './pages/StoreOwnerDashboard';\n\n/**\n * MainAppContent Component:\n * This component conditionally renders the appropriate dashboard or login/register page\n * based on the authentication status and user role.\n * It consumes the AuthContext.\n */\nfunction MainAppContent() {\n  const { token, role, logout } = useContext(AuthContext);\n  const [isAuthChecking, setIsAuthChecking] = useState(true);\n  const [currentPage, setCurrentPage] = useState(window.location.hash === '#register' ? 'register' : 'login');\n\n  // Effect hook to verify token validity on initial component mount\n  useEffect(() => {\n    const verifyToken = async () => {\n      if (token) {\n        try {\n          const response = await fetch('http://localhost:5000/api/admin/users', {\n            headers: {\n              'Authorization': `Bearer ${token}`,\n            },\n          });\n\n          if (!response.ok) {\n            console.warn(\"Token verification failed, logging out.\");\n            logout();\n          }\n        } catch (error) {\n            // Log the error for debugging purposes, but don't expose sensitive details to the user\n            console.error(\"Error during token verification:\", error);\n            // If there's a network error or any other issue, assume the token is invalid or session is broken\n            logout();\n        }\n      }\n      setIsAuthChecking(false);\n    };\n\n    verifyToken();\n\n    // Optional: Listen for hash changes from browser navigation (e.g., back/forward buttons)\n    const handleHashChange = () => {\n      setCurrentPage(window.location.hash === '#register' ? 'register' : 'login');\n    };\n    window.addEventListener('hashchange', handleHashChange);\n    return () => {\n      window.removeEventListener('hashchange', handleHashChange);\n    };\n  }, [token, logout]);\n\n  // Display a loading indicator while the authentication status is being verified\n  if (isAuthChecking) {\n    return (\n      <Container className=\"d-flex justify-content-center align-items-center min-vh-100\">\n        <p className=\"h4 text-muted\">Checking authentication...</p>\n      </Container>\n    );\n  }\n\n  let content;\n  // Conditional rendering based on whether a valid token exists\n  if (!token) {\n    // If no token, display the login or registration page based on currentPage state\n    content = (\n      <Container className=\"d-flex flex-column align-items-center justify-content-center min-vh-100 bg-light\">\n        {currentPage === 'login' ? (\n          <>\n            <LoginPage />\n            {/* <p className=\"mt-3 text-muted\">\n              Don't have an account?{' '}\n              <a href=\"#register\" className=\"text-primary text-decoration-none\" onClick={(e) => {\n                e.preventDefault();\n                setCurrentPage('register'); // Update state to show register page\n                window.location.hash = '#register'; // Update hash for URL consistency\n              }}>\n                Register here\n              </a>\n            </p> */}\n          </>\n        ) : (\n          <>\n            <RegisterPage />\n            {/* <p className=\"mt-3 text-muted\">\n              Already have an account?{' '}\n              <a href=\"#login\" className=\"text-primary text-decoration-none\" onClick={(e) => {\n                e.preventDefault();\n                setCurrentPage('login'); // Update state to show login page\n                window.location.hash = ''; // Clear hash for login page\n              }}>\n                Login here\n              </a>\n            </p> */}\n          </>\n        )}\n      </Container>\n    );\n  } else {\n    // If a token exists, render the appropriate dashboard based on the user's role\n    switch (role) {\n      case 'admin':\n        content = <AdminDashboard />;\n        break;\n      case 'user':\n        content = <UserDashboard />;\n        break;\n      case 'store_owner':\n        content = <StoreOwnerDashboard />;\n        break;\n      default:\n        // Fallback for unrecognized roles or other unauthorized scenarios\n        content = (\n          <Container className=\"d-flex justify-content-center align-items-center min-vh-100 flex-column\">\n            <Alert variant=\"danger\" className=\"h4 text-center\">\n              Access Denied: Your role is not recognized or authorized.\n            </Alert>\n            <Button variant=\"danger\" onClick={logout} className=\"mt-3\">\n              Logout\n            </Button>\n          </Container>\n        );\n    }\n  }\n\n  return (\n    <div className=\"bg-light font-sans text-dark\"> {/* Basic body styling */}\n      {content}\n    </div>\n  );\n}\n\n/**\n * App Component:\n * The root component that wraps the MainAppContent with AuthProvider.\n * This ensures that AuthContext is available throughout the application.\n */\nfunction App() {\n  return (\n    <AuthProvider>\n      <MainAppContent />\n    </AuthProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}